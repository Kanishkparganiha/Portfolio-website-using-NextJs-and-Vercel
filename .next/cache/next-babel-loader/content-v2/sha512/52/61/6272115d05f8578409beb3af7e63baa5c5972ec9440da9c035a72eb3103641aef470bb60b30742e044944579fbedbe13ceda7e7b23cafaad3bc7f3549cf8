{"ast":null,"code":"const OfferingCardData = [{\n  img: 'bert-google.png',\n  title: 'BERT',\n  Typography_H1: 'Fine-Tuning BERT model on CoNLL dataset for Named Entity Recognition using PyTorch',\n  Typography_H2: 'PyTorch | BERT | RNN | Transformers',\n  Typography_p: \"In this project I trained a BERT model consisting of 12 - layered Transformers on massive text corpora of MIT movie dataset by adding a token-level classifier on the top of the BERT model. The model performance is then evaluated using F-1 score and found to be 94.45%\",\n  link: 'https://github.com/Kanishkparganiha/Named-Entity-Recognition-using-BERT-with-PyTorch'\n}, {\n  img: 'CNN.png',\n  title: 'CNN',\n  Typography_H1: 'Image Classification using CNN and Pytorch on CIFAR-10 dataset',\n  Typography_H2: 'PyTorch | CNN | CIFAR-10 | Deep Learning',\n  Typography_p: \"In this project I designed a CNN model architecture and trained the network on CIFAR-10 dataset for performing image classfication task. The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. The data is preprocessed by normalizing the image, followed by loading the training set on model and used CrossEntropyLoss as loss function and SGD as optimizers\",\n  link: 'https://github.com/Kanishkparganiha/Named-Entity-Recognition-using-BERT-with-PyTorch'\n}, {\n  img: 'Flask.png',\n  title: 'Docker',\n  Typography_H1: 'Build a Flask web app with spacy model and deployed it on Heroku server using Docker Container  ',\n  Typography_H2: 'Docker | Python | Flask | Spacy-NER | Heroku',\n  Typography_p: \"Build a Linux Docker container to package up the Flask web app with all its necessary components, such as libraries and dependencies and deployed it to the Heroku web server\",\n  link: 'https://github.com/Kanishkparganiha/Deploying-NLP-Spacy-model-using-Docker-and-Flask'\n}];\nexport default OfferingCardData;","map":{"version":3,"sources":["/home/kanishka/data_science/Portfolio-website-using-NextJs-and-Vercel/components/OfferingCardData.jsx"],"names":["OfferingCardData","img","title","Typography_H1","Typography_H2","Typography_p","link"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CACvB;AACEC,EAAAA,GAAG,EAAE,iBADP;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,aAAa,EAAE,oFAHjB;AAIEC,EAAAA,aAAa,EAAE,qCAJjB;AAKEC,EAAAA,YAAY,EAAE,6QALhB;AAMGC,EAAAA,IAAI,EAAC;AANR,CADuB,EASvB;AACEL,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,aAAa,EAAE,gEAHjB;AAIEC,EAAAA,aAAa,EAAE,0CAJjB;AAKEC,EAAAA,YAAY,EAAE,kZALhB;AAMEC,EAAAA,IAAI,EAAC;AANP,CATuB,EAiBxB;AACEL,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,aAAa,EAAE,kGAHjB;AAIEC,EAAAA,aAAa,EAAE,8CAJjB;AAKEC,EAAAA,YAAY,EAAE,+KALhB;AAMEC,EAAAA,IAAI,EAAC;AANP,CAjBwB,CAAzB;AA2BA,eAAeN,gBAAf","sourcesContent":["const OfferingCardData = [\n  {\n    img: 'bert-google.png',\n    title: 'BERT',\n    Typography_H1: 'Fine-Tuning BERT model on CoNLL dataset for Named Entity Recognition using PyTorch',\n    Typography_H2: 'PyTorch | BERT | RNN | Transformers',\n    Typography_p: \"In this project I trained a BERT model consisting of 12 - layered Transformers on massive text corpora of MIT movie dataset by adding a token-level classifier on the top of the BERT model. The model performance is then evaluated using F-1 score and found to be 94.45%\"\n    ,link:'https://github.com/Kanishkparganiha/Named-Entity-Recognition-using-BERT-with-PyTorch'\n  },\n  {\n    img: 'CNN.png',\n    title: 'CNN',\n    Typography_H1: 'Image Classification using CNN and Pytorch on CIFAR-10 dataset',\n    Typography_H2: 'PyTorch | CNN | CIFAR-10 | Deep Learning',\n    Typography_p: \"In this project I designed a CNN model architecture and trained the network on CIFAR-10 dataset for performing image classfication task. The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. The data is preprocessed by normalizing the image, followed by loading the training set on model and used CrossEntropyLoss as loss function and SGD as optimizers\"\n   ,link:'https://github.com/Kanishkparganiha/Named-Entity-Recognition-using-BERT-with-PyTorch'\n },\n {\n   img: 'Flask.png',\n   title: 'Docker',\n   Typography_H1: 'Build a Flask web app with spacy model and deployed it on Heroku server using Docker Container  ',\n   Typography_H2: 'Docker | Python | Flask | Spacy-NER | Heroku',\n   Typography_p: \"Build a Linux Docker container to package up the Flask web app with all its necessary components, such as libraries and dependencies and deployed it to the Heroku web server\"\n  ,link:'https://github.com/Kanishkparganiha/Deploying-NLP-Spacy-model-using-Docker-and-Flask'\n }\n];\n\nexport default OfferingCardData;\n"]},"metadata":{},"sourceType":"module"}